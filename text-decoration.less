#_text-decoration {
  @char-repeat: 100;

  @solid : '—';
  @dashed: '-';
  @dotted: '·';
  @double: '=' -1px;
  @wave  : '~' -1px;

  @underline   : 0;
  @overline    : -1em;
  @line-through: -.5em;

  .style(@name) when (iskeyword(@name)) {
    .style(@@name);
  }

  .style(@options) when (length(@options)>=2) {
    .style(extract(@options, 1), extract(@options, 2));
  }

  .style(@char, @spacing: 0) when (isstring(@char)) {
    @content: ~`(function(c,r) {var str = []; c = c.substr(1, c.length-2); for (var i=0; i<r; i++) str.push(c); return '"'+str.join('')+'"';})("@{char}", @{char-repeat})`;
    .set({
      content: @content;
      letter-spacing: @spacing;
    });
  }

  .line(@line) when (iskeyword(@line)) {
    .line(@@line);
  }

  .line(@line) when (isnumber(@line)) {
    .set({ margin-top: @line });
  }

  .set(@rule) {
    &:before { @rule(); }
  }

  .base() {
    position: relative;

    .set({
      position: absolute;
      left: 0; right: 0; top: .5em;
      overflow: hidden;
      white-space: nowrap;
    });
  }

}

.text-decoration(@line: none, @style: none, @color: none, @opacity: none) {
  #_text-decoration .base();
  .text-decoration-line(@line);
  .text-decoration-style(@style);
  .text-decoration-color(@color);
  .text-decoration-opacity(@opacity);
}

.text-decoration-line(@line) when not (@line = none) {
  #_text-decoration .base();
  #_text-decoration .line(@line);
}

.text-decoration-style(@style) when not (@style = none) {
  #_text-decoration .style(@style);
}

.text-decoration-color(@color) when not (@color = none) {
  #_text-decoration .set({ color: @color });
}

.text-decoration-opacity(@opacity) when not (@opacity = none) {
  #_text-decoration .set({ opacity: @opacity });
}