#_text-decoration {
  @char-repeat: 40;

  @solid : '—';
  @dashed: '-';
  @dotted: '·';
  @double: '=' -1px;
  @wave  : '~' -1px;

  @underline   : 0;
  @overline    : -1em;
  @line-through: -.5em;

/*   .options(@repeat: @char-repeat, @psedo:before) {
  @@var
}
 */
  .style(@name) when (iskeyword(@name)) {
    .style(@@name);
  }

  .style(@options) when (length(@options)>=2) {
    .style(extract(@options, 1), extract(@options, 2));
  }

  .style(@char, @spacing: 0) when (isstring(@char)) {
    @content: ~`(function(c,r) {var str = []; c = c.substr(1, c.length-2); for (var i=0; i<r; i++) str.push(c); return '"'+str.join('')+'"';})("@{char}", @{char-repeat})`;
    .set({
      content: @content;
      letter-spacing: @spacing;
    });
  }

  .line(@line) when (iskeyword(@line)) {
    .line(@@line);
  }

  .line(@line) when (isnumber(@line)) {
    position: relative;
    text-decoration: none;

    .set({
      margin-top: @line;
      position: absolute;
      left: 0; top: 0.5em; right: 0;
      overflow: hidden;
      white-space: nowrap;;
    });
  }

  .set(@rule) when (isruleset(@rule)) {
    &:before { @rule(); }
  }
}

.text-decoration() {
  #_text-decoration.set({ display: none; })
}

.text-decoration(@line, @style: solid, @rules: {}) {
  .text-decoration-line(@line);
  .text-decoration-style(@style);
  .text-decoration-rules(@rules);
}

.text-decoration-line(@line) {
  #_text-decoration.line(@line);
}

.text-decoration-style(@style) {
  #_text-decoration.style(@style);
}

.text-decoration-rules(@rules) {
  #_text-decoration.set(@rules);
}